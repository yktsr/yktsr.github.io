<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Security on Electric Sheep and Androids</title>
    <link>https://yktsr.github.io/categories/security/</link>
    <description>Recent content in Security on Electric Sheep and Androids</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>ja</language>
    <lastBuildDate>Tue, 16 Jan 2018 16:28:12 +0900</lastBuildDate>
    
	<atom:link href="https://yktsr.github.io/categories/security/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>(*(void(*)()) shellcode)()の意味について考える</title>
      <link>https://yktsr.github.io/security/void_pointer/</link>
      <pubDate>Tue, 16 Jan 2018 16:28:12 +0900</pubDate>
      
      <guid>https://yktsr.github.io/security/void_pointer/</guid>
      <description>(*(void(*)()) shellcode)()ってなんぞ？ 最近、アセンブリ言語の勉強を始めたわけだが、文字列を関数として呼び出すコードを書く際、決まってこの表現が出てくる。
char shellcode[] = &amp;quot;\x00\x00\x00\x00\x00&amp;quot;; (*(void(*)()) shellcode)()  なんとなく関数ポインタを指していることは予想がつくが、そもそも文字列を関数として処理させるには どうしたらいんだろう？そんな疑問に大正義StackOverflowが答えてくれた。
What does void mean in code
そもそも関数ポインタってなんだっけ #include &amp;lt;stdio.h&amp;gt; void func(void); int main() { void (*hoge)() = func; hoge(); return 0; } void func() { printf(&amp;quot;hoge hoge&amp;quot;); }  変数hogeは関数ポインタ（アドレス）を指す。宣言方法は戻り値の型 (*変数名) (仮引数); つまり引数がある場合はこうする。
#include &amp;lt;stdio.h&amp;gt; int func(int, int); int main() { int (*hoge)(int, int) = func; hoge(1,2); return 0; } int func(int a, int b) { return a+b; }  少し書き下してみる つまり下記を少し書き下すと、</description>
    </item>
    
  </channel>
</rss>